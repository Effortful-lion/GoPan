// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0--rc3
// source: dbproxyService.proto

package dbproxyPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件元信息（与结构体FileMeta完全对应）
type FileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSha1 string `protobuf:"bytes,1,opt,name=file_sha1,json=fileSha1,proto3" json:"file_sha1,omitempty"`  // 基于SHA1算法的文件哈希值（对应FileSha1）
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`  // 文件名（对应FileName）
	FileSize int64  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"` // 文件大小（对应FileSize）
	Location string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`                  // 文件存储路径（对应Location）
	UploadAt string `protobuf:"bytes,5,opt,name=upload_at,json=uploadAt,proto3" json:"upload_at,omitempty"`  // 文件上传时间（对应UploadAt）
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	mi := &file_dbproxyService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{0}
}

func (x *FileMeta) GetFileSha1() string {
	if x != nil {
		return x.FileSha1
	}
	return ""
}

func (x *FileMeta) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMeta) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMeta) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FileMeta) GetUploadAt() string {
	if x != nil {
		return x.UploadAt
	}
	return ""
}

// 用户文件信息（复用FileMeta并补充用户关联字段）
type UserFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string    `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          // 用户名
	FileMeta    *FileMeta `protobuf:"bytes,2,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`          // 文件元信息（关联上述FileMeta）
	LastUpdated string    `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // 文件最后更新时间（用户视角的上传时间）
}

func (x *UserFileMeta) Reset() {
	*x = UserFileMeta{}
	mi := &file_dbproxyService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFileMeta) ProtoMessage() {}

func (x *UserFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFileMeta.ProtoReflect.Descriptor instead.
func (*UserFileMeta) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{1}
}

func (x *UserFileMeta) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserFileMeta) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

func (x *UserFileMeta) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// 通过哈希获取文件元信息请求
type GetFileMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSha1 string `protobuf:"bytes,1,opt,name=file_sha1,json=fileSha1,proto3" json:"file_sha1,omitempty"` // 文件SHA1哈希值（与FileMeta.FileSha1对应）
}

func (x *GetFileMetaRequest) Reset() {
	*x = GetFileMetaRequest{}
	mi := &file_dbproxyService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMetaRequest) ProtoMessage() {}

func (x *GetFileMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMetaRequest.ProtoReflect.Descriptor instead.
func (*GetFileMetaRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileMetaRequest) GetFileSha1() string {
	if x != nil {
		return x.FileSha1
	}
	return ""
}

// 通过哈希获取文件元信息响应（仅返回文件元信息）
type GetFileMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMeta *FileMeta `protobuf:"bytes,1,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"` // 文件元信息（查询失败时可为空）
}

func (x *GetFileMetaResponse) Reset() {
	*x = GetFileMetaResponse{}
	mi := &file_dbproxyService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMetaResponse) ProtoMessage() {}

func (x *GetFileMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMetaResponse.ProtoReflect.Descriptor instead.
func (*GetFileMetaResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileMetaResponse) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

// 更新文件元信息请求（支持重命名等操作）
type FileMetaUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType   string `protobuf:"bytes,1,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`       // 操作类型（如"0"表示重命名）
	FileSha1 string `protobuf:"bytes,2,opt,name=file_sha1,json=fileSha1,proto3" json:"file_sha1,omitempty"` // 文件SHA1哈希值（定位文件）
	FileName string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"` // 新文件名（重命名时使用）
}

func (x *FileMetaUpdateRequest) Reset() {
	*x = FileMetaUpdateRequest{}
	mi := &file_dbproxyService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetaUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaUpdateRequest) ProtoMessage() {}

func (x *FileMetaUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaUpdateRequest.ProtoReflect.Descriptor instead.
func (*FileMetaUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{4}
}

func (x *FileMetaUpdateRequest) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *FileMetaUpdateRequest) GetFileSha1() string {
	if x != nil {
		return x.FileSha1
	}
	return ""
}

func (x *FileMetaUpdateRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// 更新文件元信息响应（返回更新后的元信息）
type FileMetaUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMeta *FileMeta `protobuf:"bytes,1,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"` // 更新后的文件元信息（更新失败时可为空）
}

func (x *FileMetaUpdateResponse) Reset() {
	*x = FileMetaUpdateResponse{}
	mi := &file_dbproxyService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetaUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaUpdateResponse) ProtoMessage() {}

func (x *FileMetaUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaUpdateResponse.ProtoReflect.Descriptor instead.
func (*FileMetaUpdateResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{5}
}

func (x *FileMetaUpdateResponse) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

// 删除文件请求
type FileDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSha1 string `protobuf:"bytes,1,opt,name=file_sha1,json=fileSha1,proto3" json:"file_sha1,omitempty"` // 文件SHA1哈希值（定位文件）
}

func (x *FileDeleteRequest) Reset() {
	*x = FileDeleteRequest{}
	mi := &file_dbproxyService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteRequest) ProtoMessage() {}

func (x *FileDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteRequest.ProtoReflect.Descriptor instead.
func (*FileDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{6}
}

func (x *FileDeleteRequest) GetFileSha1() string {
	if x != nil {
		return x.FileSha1
	}
	return ""
}

// 删除文件响应（空消息体，通过gRPC错误码判断结果）
type FileDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileDeleteResponse) Reset() {
	*x = FileDeleteResponse{}
	mi := &file_dbproxyService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteResponse) ProtoMessage() {}

func (x *FileDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteResponse.ProtoReflect.Descriptor instead.
func (*FileDeleteResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{7}
}

// 批量查询文件请求
type FileQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户名
	Limit    int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                      // 查询数量限制
}

func (x *FileQueryRequest) Reset() {
	*x = FileQueryRequest{}
	mi := &file_dbproxyService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileQueryRequest) ProtoMessage() {}

func (x *FileQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileQueryRequest.ProtoReflect.Descriptor instead.
func (*FileQueryRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{8}
}

func (x *FileQueryRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FileQueryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 批量查询文件响应（仅返回用户文件列表）
type FileQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserFiles []*UserFileMeta `protobuf:"bytes,1,rep,name=user_files,json=userFiles,proto3" json:"user_files,omitempty"` // 用户文件列表（查询失败时为空）
}

func (x *FileQueryResponse) Reset() {
	*x = FileQueryResponse{}
	mi := &file_dbproxyService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileQueryResponse) ProtoMessage() {}

func (x *FileQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileQueryResponse.ProtoReflect.Descriptor instead.
func (*FileQueryResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{9}
}

func (x *FileQueryResponse) GetUserFiles() []*UserFileMeta {
	if x != nil {
		return x.UserFiles
	}
	return nil
}

// meta
type UpdateFileMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMeta *FileMeta `protobuf:"bytes,1,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`
}

func (x *UpdateFileMetaRequest) Reset() {
	*x = UpdateFileMetaRequest{}
	mi := &file_dbproxyService_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFileMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileMetaRequest) ProtoMessage() {}

func (x *UpdateFileMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileMetaRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileMetaRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateFileMetaRequest) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

type UpdateFileMetaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMeta *FileMeta `protobuf:"bytes,1,opt,name=file_meta,json=fileMeta,proto3" json:"file_meta,omitempty"`
}

func (x *UpdateFileMetaResp) Reset() {
	*x = UpdateFileMetaResp{}
	mi := &file_dbproxyService_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFileMetaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileMetaResp) ProtoMessage() {}

func (x *UpdateFileMetaResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileMetaResp.ProtoReflect.Descriptor instead.
func (*UpdateFileMetaResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateFileMetaResp) GetFileMeta() *FileMeta {
	if x != nil {
		return x.FileMeta
	}
	return nil
}

type OnUserFileUploadFinishedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Filehash string `protobuf:"bytes,2,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize int64  `protobuf:"varint,4,opt,name=filesize,proto3" json:"filesize,omitempty"`
}

func (x *OnUserFileUploadFinishedRequest) Reset() {
	*x = OnUserFileUploadFinishedRequest{}
	mi := &file_dbproxyService_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnUserFileUploadFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnUserFileUploadFinishedRequest) ProtoMessage() {}

func (x *OnUserFileUploadFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnUserFileUploadFinishedRequest.ProtoReflect.Descriptor instead.
func (*OnUserFileUploadFinishedRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{12}
}

func (x *OnUserFileUploadFinishedRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OnUserFileUploadFinishedRequest) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *OnUserFileUploadFinishedRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OnUserFileUploadFinishedRequest) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

type OnUserFileUploadFinishedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OnUserFileUploadFinishedResp) Reset() {
	*x = OnUserFileUploadFinishedResp{}
	mi := &file_dbproxyService_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnUserFileUploadFinishedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnUserFileUploadFinishedResp) ProtoMessage() {}

func (x *OnUserFileUploadFinishedResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnUserFileUploadFinishedResp.ProtoReflect.Descriptor instead.
func (*OnUserFileUploadFinishedResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{13}
}

// redis
type CacheChunkData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filehash   string `protobuf:"bytes,1,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filesize   int64  `protobuf:"varint,2,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Chunksize  int32  `protobuf:"varint,3,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	Chunkcount int32  `protobuf:"varint,4,opt,name=chunkcount,proto3" json:"chunkcount,omitempty"`
	Username   string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CacheChunkData) Reset() {
	*x = CacheChunkData{}
	mi := &file_dbproxyService_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkData) ProtoMessage() {}

func (x *CacheChunkData) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkData.ProtoReflect.Descriptor instead.
func (*CacheChunkData) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{14}
}

func (x *CacheChunkData) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *CacheChunkData) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *CacheChunkData) GetChunksize() int32 {
	if x != nil {
		return x.Chunksize
	}
	return 0
}

func (x *CacheChunkData) GetChunkcount() int32 {
	if x != nil {
		return x.Chunkcount
	}
	return 0
}

func (x *CacheChunkData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CacheChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data *CacheChunkData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CacheChunkRequest) Reset() {
	*x = CacheChunkRequest{}
	mi := &file_dbproxyService_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkRequest) ProtoMessage() {}

func (x *CacheChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkRequest.ProtoReflect.Descriptor instead.
func (*CacheChunkRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{15}
}

func (x *CacheChunkRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheChunkRequest) GetData() *CacheChunkData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CacheChunkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheChunkResp) Reset() {
	*x = CacheChunkResp{}
	mi := &file_dbproxyService_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkResp) ProtoMessage() {}

func (x *CacheChunkResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkResp.ProtoReflect.Descriptor instead.
func (*CacheChunkResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{16}
}

type CacheChunkUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashkey string `protobuf:"bytes,1,opt,name=hashkey,proto3" json:"hashkey,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value   int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CacheChunkUpdateRequest) Reset() {
	*x = CacheChunkUpdateRequest{}
	mi := &file_dbproxyService_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkUpdateRequest) ProtoMessage() {}

func (x *CacheChunkUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkUpdateRequest.ProtoReflect.Descriptor instead.
func (*CacheChunkUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{17}
}

func (x *CacheChunkUpdateRequest) GetHashkey() string {
	if x != nil {
		return x.Hashkey
	}
	return ""
}

func (x *CacheChunkUpdateRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheChunkUpdateRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CacheChunkUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheChunkUpdateResp) Reset() {
	*x = CacheChunkUpdateResp{}
	mi := &file_dbproxyService_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkUpdateResp) ProtoMessage() {}

func (x *CacheChunkUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkUpdateResp.ProtoReflect.Descriptor instead.
func (*CacheChunkUpdateResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{18}
}

type CacheChunkQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashkey string `protobuf:"bytes,1,opt,name=hashkey,proto3" json:"hashkey,omitempty"`
}

func (x *CacheChunkQueryRequest) Reset() {
	*x = CacheChunkQueryRequest{}
	mi := &file_dbproxyService_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkQueryRequest) ProtoMessage() {}

func (x *CacheChunkQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkQueryRequest.ProtoReflect.Descriptor instead.
func (*CacheChunkQueryRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{19}
}

func (x *CacheChunkQueryRequest) GetHashkey() string {
	if x != nil {
		return x.Hashkey
	}
	return ""
}

type CacheChunkQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CacheChunkQueryResp) Reset() {
	*x = CacheChunkQueryResp{}
	mi := &file_dbproxyService_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkQueryResp) ProtoMessage() {}

func (x *CacheChunkQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkQueryResp.ProtoReflect.Descriptor instead.
func (*CacheChunkQueryResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{20}
}

func (x *CacheChunkQueryResp) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type CacheChunkDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashkey string `protobuf:"bytes,1,opt,name=hashkey,proto3" json:"hashkey,omitempty"`
}

func (x *CacheChunkDeleteRequest) Reset() {
	*x = CacheChunkDeleteRequest{}
	mi := &file_dbproxyService_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkDeleteRequest) ProtoMessage() {}

func (x *CacheChunkDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkDeleteRequest.ProtoReflect.Descriptor instead.
func (*CacheChunkDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{21}
}

func (x *CacheChunkDeleteRequest) GetHashkey() string {
	if x != nil {
		return x.Hashkey
	}
	return ""
}

type CacheChunkDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheChunkDeleteResp) Reset() {
	*x = CacheChunkDeleteResp{}
	mi := &file_dbproxyService_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheChunkDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheChunkDeleteResp) ProtoMessage() {}

func (x *CacheChunkDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheChunkDeleteResp.ProtoReflect.Descriptor instead.
func (*CacheChunkDeleteResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{22}
}

// mysql
type OnFileUploadFinishedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filehash string `protobuf:"bytes,1,opt,name=filehash,proto3" json:"filehash,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize int64  `protobuf:"varint,3,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Fileaddr string `protobuf:"bytes,4,opt,name=fileaddr,proto3" json:"fileaddr,omitempty"`
}

func (x *OnFileUploadFinishedRequest) Reset() {
	*x = OnFileUploadFinishedRequest{}
	mi := &file_dbproxyService_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnFileUploadFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnFileUploadFinishedRequest) ProtoMessage() {}

func (x *OnFileUploadFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnFileUploadFinishedRequest.ProtoReflect.Descriptor instead.
func (*OnFileUploadFinishedRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{23}
}

func (x *OnFileUploadFinishedRequest) GetFilehash() string {
	if x != nil {
		return x.Filehash
	}
	return ""
}

func (x *OnFileUploadFinishedRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OnFileUploadFinishedRequest) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *OnFileUploadFinishedRequest) GetFileaddr() string {
	if x != nil {
		return x.Fileaddr
	}
	return ""
}

type OnFileUploadFinishedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OnFileUploadFinishedResp) Reset() {
	*x = OnFileUploadFinishedResp{}
	mi := &file_dbproxyService_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnFileUploadFinishedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnFileUploadFinishedResp) ProtoMessage() {}

func (x *OnFileUploadFinishedResp) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnFileUploadFinishedResp.ProtoReflect.Descriptor instead.
func (*OnFileUploadFinishedResp) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{24}
}

// 用户密码校验
type CheckPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码（原始密码，服务端会加盐加密）
}

func (x *CheckPasswordRequest) Reset() {
	*x = CheckPasswordRequest{}
	mi := &file_dbproxyService_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordRequest) ProtoMessage() {}

func (x *CheckPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordRequest.ProtoReflect.Descriptor instead.
func (*CheckPasswordRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{25}
}

func (x *CheckPasswordRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CheckPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CheckPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckPasswordResponse) Reset() {
	*x = CheckPasswordResponse{}
	mi := &file_dbproxyService_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordResponse) ProtoMessage() {}

func (x *CheckPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordResponse.ProtoReflect.Descriptor instead.
func (*CheckPasswordResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{26}
}

// 用户注册
type SignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名（必填，长度≥3）
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码（必填，长度≥5）
}

func (x *SignupRequest) Reset() {
	*x = SignupRequest{}
	mi := &file_dbproxyService_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupRequest) ProtoMessage() {}

func (x *SignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupRequest.ProtoReflect.Descriptor instead.
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{27}
}

func (x *SignupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignupResponse) Reset() {
	*x = SignupResponse{}
	mi := &file_dbproxyService_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupResponse) ProtoMessage() {}

func (x *SignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbproxyService_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupResponse.ProtoReflect.Descriptor instead.
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return file_dbproxyService_proto_rawDescGZIP(), []int{28}
}

var File_dbproxyService_proto protoreflect.FileDescriptor

var file_dbproxyService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x62, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x31,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x31, 0x22, 0x4c,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x15,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x31, 0x22, 0x14, 0x0a, 0x12, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x50, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1f, 0x4f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa2, 0x01, 0x0a, 0x0e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x59, 0x0a, 0x11, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x10, 0x0a, 0x0e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5b, 0x0a,
	0x17, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x68, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x68, 0x6b, 0x65, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x44,
	0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x6b, 0x65, 0x79, 0x22,
	0x16, 0x0a, 0x14, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x4f, 0x6e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x61, 0x64, 0x64, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x4f, 0x6e, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x0d,
	0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x09, 0x0a, 0x0e, 0x44, 0x42, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x22, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x44, 0x42, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x44, 0x42, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x12, 0x20, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x25, 0x2e, 0x44, 0x42,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x79, 0x0a, 0x18, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x2f, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x21, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x61, 0x0a, 0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x44, 0x42, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x14, 0x4f, 0x6e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x12, 0x2b, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x12, 0x1d, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x44, 0x42, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x64, 0x62, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x50,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbproxyService_proto_rawDescOnce sync.Once
	file_dbproxyService_proto_rawDescData = file_dbproxyService_proto_rawDesc
)

func file_dbproxyService_proto_rawDescGZIP() []byte {
	file_dbproxyService_proto_rawDescOnce.Do(func() {
		file_dbproxyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbproxyService_proto_rawDescData)
	})
	return file_dbproxyService_proto_rawDescData
}

var file_dbproxyService_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_dbproxyService_proto_goTypes = []any{
	(*FileMeta)(nil),                        // 0: DBProxyService.FileMeta
	(*UserFileMeta)(nil),                    // 1: DBProxyService.UserFileMeta
	(*GetFileMetaRequest)(nil),              // 2: DBProxyService.GetFileMetaRequest
	(*GetFileMetaResponse)(nil),             // 3: DBProxyService.GetFileMetaResponse
	(*FileMetaUpdateRequest)(nil),           // 4: DBProxyService.FileMetaUpdateRequest
	(*FileMetaUpdateResponse)(nil),          // 5: DBProxyService.FileMetaUpdateResponse
	(*FileDeleteRequest)(nil),               // 6: DBProxyService.FileDeleteRequest
	(*FileDeleteResponse)(nil),              // 7: DBProxyService.FileDeleteResponse
	(*FileQueryRequest)(nil),                // 8: DBProxyService.FileQueryRequest
	(*FileQueryResponse)(nil),               // 9: DBProxyService.FileQueryResponse
	(*UpdateFileMetaRequest)(nil),           // 10: DBProxyService.UpdateFileMetaRequest
	(*UpdateFileMetaResp)(nil),              // 11: DBProxyService.UpdateFileMetaResp
	(*OnUserFileUploadFinishedRequest)(nil), // 12: DBProxyService.OnUserFileUploadFinishedRequest
	(*OnUserFileUploadFinishedResp)(nil),    // 13: DBProxyService.OnUserFileUploadFinishedResp
	(*CacheChunkData)(nil),                  // 14: DBProxyService.CacheChunkData
	(*CacheChunkRequest)(nil),               // 15: DBProxyService.CacheChunkRequest
	(*CacheChunkResp)(nil),                  // 16: DBProxyService.CacheChunkResp
	(*CacheChunkUpdateRequest)(nil),         // 17: DBProxyService.CacheChunkUpdateRequest
	(*CacheChunkUpdateResp)(nil),            // 18: DBProxyService.CacheChunkUpdateResp
	(*CacheChunkQueryRequest)(nil),          // 19: DBProxyService.CacheChunkQueryRequest
	(*CacheChunkQueryResp)(nil),             // 20: DBProxyService.CacheChunkQueryResp
	(*CacheChunkDeleteRequest)(nil),         // 21: DBProxyService.CacheChunkDeleteRequest
	(*CacheChunkDeleteResp)(nil),            // 22: DBProxyService.CacheChunkDeleteResp
	(*OnFileUploadFinishedRequest)(nil),     // 23: DBProxyService.OnFileUploadFinishedRequest
	(*OnFileUploadFinishedResp)(nil),        // 24: DBProxyService.OnFileUploadFinishedResp
	(*CheckPasswordRequest)(nil),            // 25: DBProxyService.CheckPasswordRequest
	(*CheckPasswordResponse)(nil),           // 26: DBProxyService.CheckPasswordResponse
	(*SignupRequest)(nil),                   // 27: DBProxyService.SignupRequest
	(*SignupResponse)(nil),                  // 28: DBProxyService.SignupResponse
	nil,                                     // 29: DBProxyService.CacheChunkQueryResp.DataEntry
}
var file_dbproxyService_proto_depIdxs = []int32{
	0,  // 0: DBProxyService.UserFileMeta.file_meta:type_name -> DBProxyService.FileMeta
	0,  // 1: DBProxyService.GetFileMetaResponse.file_meta:type_name -> DBProxyService.FileMeta
	0,  // 2: DBProxyService.FileMetaUpdateResponse.file_meta:type_name -> DBProxyService.FileMeta
	1,  // 3: DBProxyService.FileQueryResponse.user_files:type_name -> DBProxyService.UserFileMeta
	0,  // 4: DBProxyService.UpdateFileMetaRequest.file_meta:type_name -> DBProxyService.FileMeta
	0,  // 5: DBProxyService.UpdateFileMetaResp.file_meta:type_name -> DBProxyService.FileMeta
	14, // 6: DBProxyService.CacheChunkRequest.data:type_name -> DBProxyService.CacheChunkData
	29, // 7: DBProxyService.CacheChunkQueryResp.data:type_name -> DBProxyService.CacheChunkQueryResp.DataEntry
	2,  // 8: DBProxyService.DBProxyService.GetFileMetaHandler:input_type -> DBProxyService.GetFileMetaRequest
	4,  // 9: DBProxyService.DBProxyService.FileMetaUpdateHandler:input_type -> DBProxyService.FileMetaUpdateRequest
	6,  // 10: DBProxyService.DBProxyService.FileDeleteHandler:input_type -> DBProxyService.FileDeleteRequest
	8,  // 11: DBProxyService.DBProxyService.FileQueryHandler:input_type -> DBProxyService.FileQueryRequest
	10, // 12: DBProxyService.DBProxyService.FileMetaUpdateAll:input_type -> DBProxyService.UpdateFileMetaRequest
	12, // 13: DBProxyService.DBProxyService.OnUserFileUploadFinished:input_type -> DBProxyService.OnUserFileUploadFinishedRequest
	15, // 14: DBProxyService.DBProxyService.CacheChunk:input_type -> DBProxyService.CacheChunkRequest
	17, // 15: DBProxyService.DBProxyService.CacheChunkUpdate:input_type -> DBProxyService.CacheChunkUpdateRequest
	19, // 16: DBProxyService.DBProxyService.CacheChunkQuery:input_type -> DBProxyService.CacheChunkQueryRequest
	21, // 17: DBProxyService.DBProxyService.CacheChunkDelete:input_type -> DBProxyService.CacheChunkDeleteRequest
	23, // 18: DBProxyService.DBProxyService.OnFileUploadFinished:input_type -> DBProxyService.OnFileUploadFinishedRequest
	25, // 19: DBProxyService.DBProxyService.CheckPassword:input_type -> DBProxyService.CheckPasswordRequest
	27, // 20: DBProxyService.DBProxyService.UserSignUp:input_type -> DBProxyService.SignupRequest
	3,  // 21: DBProxyService.DBProxyService.GetFileMetaHandler:output_type -> DBProxyService.GetFileMetaResponse
	5,  // 22: DBProxyService.DBProxyService.FileMetaUpdateHandler:output_type -> DBProxyService.FileMetaUpdateResponse
	7,  // 23: DBProxyService.DBProxyService.FileDeleteHandler:output_type -> DBProxyService.FileDeleteResponse
	9,  // 24: DBProxyService.DBProxyService.FileQueryHandler:output_type -> DBProxyService.FileQueryResponse
	11, // 25: DBProxyService.DBProxyService.FileMetaUpdateAll:output_type -> DBProxyService.UpdateFileMetaResp
	13, // 26: DBProxyService.DBProxyService.OnUserFileUploadFinished:output_type -> DBProxyService.OnUserFileUploadFinishedResp
	16, // 27: DBProxyService.DBProxyService.CacheChunk:output_type -> DBProxyService.CacheChunkResp
	18, // 28: DBProxyService.DBProxyService.CacheChunkUpdate:output_type -> DBProxyService.CacheChunkUpdateResp
	20, // 29: DBProxyService.DBProxyService.CacheChunkQuery:output_type -> DBProxyService.CacheChunkQueryResp
	22, // 30: DBProxyService.DBProxyService.CacheChunkDelete:output_type -> DBProxyService.CacheChunkDeleteResp
	24, // 31: DBProxyService.DBProxyService.OnFileUploadFinished:output_type -> DBProxyService.OnFileUploadFinishedResp
	26, // 32: DBProxyService.DBProxyService.CheckPassword:output_type -> DBProxyService.CheckPasswordResponse
	28, // 33: DBProxyService.DBProxyService.UserSignUp:output_type -> DBProxyService.SignupResponse
	21, // [21:34] is the sub-list for method output_type
	8,  // [8:21] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dbproxyService_proto_init() }
func file_dbproxyService_proto_init() {
	if File_dbproxyService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbproxyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dbproxyService_proto_goTypes,
		DependencyIndexes: file_dbproxyService_proto_depIdxs,
		MessageInfos:      file_dbproxyService_proto_msgTypes,
	}.Build()
	File_dbproxyService_proto = out.File
	file_dbproxyService_proto_rawDesc = nil
	file_dbproxyService_proto_goTypes = nil
	file_dbproxyService_proto_depIdxs = nil
}
